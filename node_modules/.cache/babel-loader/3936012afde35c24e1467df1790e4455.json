{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadab Raza\\\\Desktop\\\\React-theme-Project\\\\src\\\\Pages\\\\Users.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUser } from '../redux/actions/actions';\nimport { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TableContainer, Table, TableRow, TableBody, TableHead, TableCell, TablePagination } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const data = useSelector(state => state.allUsersData.data);\n  const dispatch = useDispatch(); // const btnstyle = { marginLeft: '15px', color: 'white' }\n  // const classes = useStyles();\n  // const [users, setUsers] = useState([]);\n  // const [page, setPage] = useState(0);\n  // const [rowsPerPage, setRowsPerPage] = useState(4);\n\n  const loadUser = async () => {\n    const response = await axios.get(\"http://localhost:5000/users\").catch(error => {\n      console.log(error);\n    });\n    dispatch(fetchUser(response.data));\n  };\n\n  const deleteUser = async id => {\n    const res = await axios.delete(`http://localhost:5000/users/${id}`);\n    loadUser();\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n  console.log(data);\n\n  const onChangePage = (event, nextPge) => {\n    setPage(nextPge);\n  };\n\n  const onChangeRowsPerPage = event => {// setRowsPerPage = (event.target.value);\n  }; // const renderList = data.map((user) =>{\n  //   const { name, email, company, phone, website } = user;\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Users, \"baHjFRQWbTEQf9QRfrBhqxEE/Ug=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Users;\nexport default Users; // import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { Paper, TableContainer, Table, TableRow, TableBody, TableHead, TableCell, TablePagination } from '@material-ui/core';\n// import axios from 'axios';\n// import { useState, useEffect } from \"react\";\n// import EditIcon from '@material-ui/icons/Edit'\n// import DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { fetchUser } from '../redux/actions/actions';\n// import { Link } from 'react-router-dom';\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     maxWidth: \"100vw\",\n//     backgroundColor: theme.palette.grey[50],\n//     paddingTop: theme.spacing(10),\n//     paddingRight: theme.spacing(30),\n//     marginLeft: '250px',\n//   },\n// }));\n// const Users = () => {\n//   const data = useSelector((state) => state.allUsersData.data);\n//   const dispatch = useDispatch();\n//   const btnstyle = { marginLeft: '15px', color: 'white' }\n//   const classes = useStyles();\n//   const [users, setUsers] = useState([]);\n//   const [page, setPage] = useState(0);\n//   const [rowsPerPage, setRowsPerPage] = useState(4);\n//   const loadUser = async () => {\n//     const response = await axios.get(\"http://localhost:5000/users\")\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//     dispatch(fetchUser(response.data));\n//   };\n//   const deleteUser = async id => {\n//     const res = await axios.delete(`http://localhost:5000/users/${id}`);\n//     loadUser();\n//   }\n//   useEffect(() => {\n//     loadUser();\n//   }, []);\n//   console.log(data)\n//   const onChangePage = (event, nextPge) => {\n//     setPage(nextPge);\n//   };\n//   const onChangeRowsPerPage = (event) => {\n//     // setRowsPerPage = (event.target.value);\n//   };\n//   // const renderList = data.map((user) =>{\n//   //   const { name, email, company, phone, website } = user;\n//   // })\n//   return (\n//     <div>\n//       <TableContainer component={Paper} className={classes.root}>\n//         <div className=\"buttonstyle\">\n//           <Link to=\"/AddUser\" color=\"inherit\" style={{ marginLeft: '15px' }}>Add User</Link>\n//         </div>\n//         {/* <Button type=\"submit\" color=\"primary\" variant=\"contained\" style={btnstyle}>Add User</Button> */}\n//         <Table >\n//           <TableHead >\n//             <TableRow >\n//               <TableCell><strong>Name</strong></TableCell>\n//               <TableCell ><strong>Email</strong></TableCell>\n//               <TableCell ><strong>Phone</strong></TableCell>\n//               <TableCell ><strong>Company Name</strong></TableCell>\n//               <TableCell ><strong>Website</strong></TableCell>\n//               <TableCell style={{ textAlign: 'center' }} ><strong>Actions</strong></TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user) => (\n//               <TableRow >\n//                 <TableCell >{user.name}</TableCell>\n//                 <TableCell >{user.email}</TableCell>\n//                 <TableCell >{user.phone}</TableCell>\n//                 <TableCell >{user.company}</TableCell>\n//                 <TableCell >{user.website}</TableCell>\n//                 <div className=\"buttonstyle2\">\n//                   <Link to={`EditUser/edit/${user.id}`} style={btnstyle} size=\"small\">{(<EditIcon />)}</Link>\n//                 </div>\n//                 <div className=\"buttonstyle3\">\n//                   <Link onClick={() => { if (window.confirm('Are you sure want to Delete.')) { deleteUser(user.id) } }} color=\"inherit\" style={btnstyle} size=\"small\" >{(<DeleteOutlineOutlinedIcon />)}</Link>\n//                 </div>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//           <TablePagination rowsPerPageOptions={[4, 8, 12, 16, 20]} count={data.length} rowsPerPage={rowsPerPage} page={page} onChangePage={onChangePage} onChangeRowsPerPage={onChangeRowsPerPage} />\n//         </Table>\n//       </TableContainer>\n//     </div>\n//   );\n// }\n// export default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/Shadab Raza/Desktop/React-theme-Project/src/Pages/Users.js"],"names":["React","axios","useDispatch","useSelector","fetchUser","useState","useEffect","Link","EditIcon","DeleteOutlineOutlinedIcon","makeStyles","Paper","TableContainer","Table","TableRow","TableBody","TableHead","TableCell","TablePagination","Users","data","state","allUsersData","dispatch","loadUser","response","get","catch","error","console","log","deleteUser","id","res","delete","onChangePage","event","nextPge","setPage","onChangeRowsPerPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,yBAAP,MAAsC,0CAAtC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,EAAgBC,cAAhB,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,SAA5D,EAAuEC,SAAvE,EAAkFC,eAAlF,QAAyG,mBAAzG;;;AAMA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAElB,QAAMC,IAAI,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBF,IAA/B,CAAxB;AACA,QAAMG,QAAQ,GAAGrB,WAAW,EAA5B,CAHkB,CAKlB;AACA;AACA;AACA;AACA;;AAIA,QAAMsB,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAU,6BAAV,EACpBC,KADoB,CACbC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAHoB,CAAvB;AAIAL,IAAAA,QAAQ,CAACnB,SAAS,CAACqB,QAAQ,CAACL,IAAV,CAAV,CAAR;AACD,GAND;;AAQA,QAAMW,UAAU,GAAG,MAAMC,EAAN,IAAY;AAC7B,UAAMC,GAAG,GAAG,MAAMhC,KAAK,CAACiC,MAAN,CAAc,+BAA8BF,EAAG,EAA/C,CAAlB;AACAR,IAAAA,QAAQ;AACT,GAHD;;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAKAK,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;;AACA,QAAMe,YAAY,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACvCC,IAAAA,OAAO,CAACD,OAAD,CAAP;AACD,GAFD;;AAIA,QAAME,mBAAmB,GAAIH,KAAD,IAAW,CACrC;AACD,GAFD,CApCkB,CAwClB;AACA;AACA;;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjDD;;GAAMjB,K;UAEShB,W,EACID,W;;;KAHbiB,K;AAmDN,eAAeA,KAAf,C,CAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUser } from '../redux/actions/actions';\nimport { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit'\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, TableContainer, Table, TableRow, TableBody, TableHead, TableCell, TablePagination } from '@material-ui/core';\n\n\n\n\n\nconst Users = () => {\n\n  const data = useSelector((state) => state.allUsersData.data);\n  const dispatch = useDispatch();\n\n  // const btnstyle = { marginLeft: '15px', color: 'white' }\n  // const classes = useStyles();\n  // const [users, setUsers] = useState([]);\n  // const [page, setPage] = useState(0);\n  // const [rowsPerPage, setRowsPerPage] = useState(4);\n\n\n\n  const loadUser = async () => {\n    const response = await axios.get(\"http://localhost:5000/users\")\n      .catch((error) => {\n        console.log(error);\n      });\n    dispatch(fetchUser(response.data));\n  };\n\n  const deleteUser = async id => {\n    const res = await axios.delete(`http://localhost:5000/users/${id}`);\n    loadUser();\n  }\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n \n\n  console.log(data)\n  const onChangePage = (event, nextPge) => {\n    setPage(nextPge);\n  };\n\n  const onChangeRowsPerPage = (event) => {\n    // setRowsPerPage = (event.target.value);\n  };\n\n  // const renderList = data.map((user) =>{\n  //   const { name, email, company, phone, website } = user;\n  // })\n\n  return (\n    <div>\n      \n    </div>\n  );\n}\n\nexport default Users;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import { Paper, TableContainer, Table, TableRow, TableBody, TableHead, TableCell, TablePagination } from '@material-ui/core';\n// import axios from 'axios';\n// import { useState, useEffect } from \"react\";\n// import EditIcon from '@material-ui/icons/Edit'\n// import DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { fetchUser } from '../redux/actions/actions';\n// import { Link } from 'react-router-dom';\n\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     maxWidth: \"100vw\",\n//     backgroundColor: theme.palette.grey[50],\n//     paddingTop: theme.spacing(10),\n//     paddingRight: theme.spacing(30),\n//     marginLeft: '250px',\n//   },\n// }));\n\n// const Users = () => {\n\n//   const data = useSelector((state) => state.allUsersData.data);\n//   const dispatch = useDispatch();\n\n//   const btnstyle = { marginLeft: '15px', color: 'white' }\n//   const classes = useStyles();\n//   const [users, setUsers] = useState([]);\n//   const [page, setPage] = useState(0);\n//   const [rowsPerPage, setRowsPerPage] = useState(4);\n\n\n\n//   const loadUser = async () => {\n//     const response = await axios.get(\"http://localhost:5000/users\")\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//     dispatch(fetchUser(response.data));\n//   };\n\n//   const deleteUser = async id => {\n//     const res = await axios.delete(`http://localhost:5000/users/${id}`);\n//     loadUser();\n//   }\n\n//   useEffect(() => {\n//     loadUser();\n//   }, []);\n \n\n//   console.log(data)\n//   const onChangePage = (event, nextPge) => {\n//     setPage(nextPge);\n//   };\n\n//   const onChangeRowsPerPage = (event) => {\n//     // setRowsPerPage = (event.target.value);\n//   };\n\n//   // const renderList = data.map((user) =>{\n//   //   const { name, email, company, phone, website } = user;\n//   // })\n\n//   return (\n//     <div>\n//       <TableContainer component={Paper} className={classes.root}>\n//         <div className=\"buttonstyle\">\n//           <Link to=\"/AddUser\" color=\"inherit\" style={{ marginLeft: '15px' }}>Add User</Link>\n//         </div>\n//         {/* <Button type=\"submit\" color=\"primary\" variant=\"contained\" style={btnstyle}>Add User</Button> */}\n//         <Table >\n//           <TableHead >\n//             <TableRow >\n//               <TableCell><strong>Name</strong></TableCell>\n//               <TableCell ><strong>Email</strong></TableCell>\n//               <TableCell ><strong>Phone</strong></TableCell>\n//               <TableCell ><strong>Company Name</strong></TableCell>\n//               <TableCell ><strong>Website</strong></TableCell>\n//               <TableCell style={{ textAlign: 'center' }} ><strong>Actions</strong></TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user) => (\n//               <TableRow >\n//                 <TableCell >{user.name}</TableCell>\n//                 <TableCell >{user.email}</TableCell>\n//                 <TableCell >{user.phone}</TableCell>\n//                 <TableCell >{user.company}</TableCell>\n//                 <TableCell >{user.website}</TableCell>\n\n//                 <div className=\"buttonstyle2\">\n//                   <Link to={`EditUser/edit/${user.id}`} style={btnstyle} size=\"small\">{(<EditIcon />)}</Link>\n//                 </div>\n\n//                 <div className=\"buttonstyle3\">\n//                   <Link onClick={() => { if (window.confirm('Are you sure want to Delete.')) { deleteUser(user.id) } }} color=\"inherit\" style={btnstyle} size=\"small\" >{(<DeleteOutlineOutlinedIcon />)}</Link>\n//                 </div>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//           <TablePagination rowsPerPageOptions={[4, 8, 12, 16, 20]} count={data.length} rowsPerPage={rowsPerPage} page={page} onChangePage={onChangePage} onChangeRowsPerPage={onChangeRowsPerPage} />\n//         </Table>\n//       </TableContainer>\n//     </div>\n//   );\n// }\n\n// export default Users;\n\n"]},"metadata":{},"sourceType":"module"}